interactive shell has >>>

orded of operations: 
1) parentheses -> zdanie wtrÄ…cone
2) Multiplication / division
3) Addition / Subtraction
data types
whole numbers are integers (ints)
3.14 floating point numbers (floats)
string 'hello world'
'word' + 'word' -> string concatenation
'word' * 3 -> string replication   (wordwordword)

variables
assignment statement 
spam = 42 this creates a new variable named spam and stores the value 42 inside
expressions are one kind of instruction in python. the other kind are statements
evaluates = expression
doesnt evaluate = statement
IDLE is an editor
interactive shell (>>>) & file editor

print() function displays the string value inside the parentheses
input() function evaluate to the string value
len() takes a string argument and then evaluates to the integer value of the length of the string
str() and int() functions return string and integer values of whatever you pass them.
int(),str() and float() convert values data type.

==  equal to
!= not equal to
< less than
> greater than
<= less than or equal to
>= greater than or equal to

the "and" operators truth table
expression         evaluates to
True and True       True
True and False      False
False and True      False
False and False     False
pythontutor.com

name = 'Kris'
age = 3000
if name == 'Alice':
    print('Hi Alice')
elif age < 12:
    print('You are not Alive, kiddo.')
elif age > 2000:
    print('Unline you, Alice is not an undead.')
elif age > 100:
    print('You are not Alive')
spam = 0
while spam < 5:
    print('Hello, World!')
    spam = spam + 1
total = 0
for num in range(101):
    total = total + num
print(total)

print('My name is')
i = 0
while i < 5:
    print('Kris Five times ' + str(i))
    i = i + 1

print('My name is')
for i in range(5, -1, -1):
    print('Kris five times ' + str(i))

import random
random.randint(1, 10)
def plusOne(number):
    return number + 1

newNumber = plusOne(5)
print(newNumber)

Function are like a mini-program inside your program.
The main point of functions is to get rid of duplicate code.
The def statement defines a function.
The input to functions are arguments. The output is the return value.
The parameters are the variables in between the function's.
parentheses in the def statement.
The return value is specified using the return statement.
Every function has a return value. If your function doesn't have a return statement, the default return value is None.
Keyword arguments to functions are usually for optional arguments.
The print() function has keyword arguments end and sep.

spam = 42 # global variable

def eggs():
    spam = 42 # local variable

Each function has its own local scope..
Assignment statement = Local Variable
No assignment statement = Global variable

A Scope can be thought of as an area of the source code, and as a container of variables.
The global scope is code outside of all functions. Variables assigned here are global variables.
Each functions code is in its own local scope. Variables assigned here are local variables.
Code in the global scope cannot use any local variables.
Code in a functions local scope cannot use variables in any another functions local scope.
If there is an assignment statement for a variable in a function, that is a local variable/


